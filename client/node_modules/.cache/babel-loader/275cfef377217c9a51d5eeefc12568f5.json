{"ast":null,"code":"import _classCallCheck from \"/Users/aglover/projects/wordpress/react-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aglover/projects/wordpress/react-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aglover/projects/wordpress/react-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aglover/projects/wordpress/react-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aglover/projects/wordpress/react-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aglover/projects/wordpress/react-app/client/src/components/counter.jsx\";\nimport React, { Component } from 'react';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      count: 1,\n      list: []\n    };\n    _this.styles = {\n      fontSize: 22,\n      fontWeight: 900\n    };\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    //Inline styles are objects\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: this.styles,\n        className: this.getClasses(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, this.formatCount()), this.renderList()))); //always use a key with map\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      if (this.state.list.length === 0) return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Empty List\");\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.state.list.map(function (item) {\n        return React.createElement(\"li\", {\n          key: item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, item);\n      }));\n    }\n  }, {\n    key: \"formatCount\",\n    value: function formatCount() {\n      var count = this.state.count; //object destruct\n\n      return count === 0 ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Zero\") : count;\n    }\n  }, {\n    key: \"getClasses\",\n    value: function getClasses() {\n      var classes = \"c1 c2 \";\n      classes += this.state.count === 0 ? \"warning\" : \"primary\";\n      return classes;\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nexport default Counter;","map":{"version":3,"sources":["/Users/aglover/projects/wordpress/react-app/client/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","list","styles","fontSize","fontWeight","getClasses","formatCount","renderList","length","map","item","classes"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,O;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,IAAI,EAAE;AAFA,K;UAIRC,M,GAAS;AACPC,MAAAA,QAAQ,EAAE,EADH;AAEPC,MAAAA,UAAU,EAAE;AAFL,K;;;;;;AAGP;6BACO;AAEP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,KAAK,EAAG,KAAKF,MAAjB;AAA0B,QAAA,SAAS,EAAG,KAAKG,UAAL,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4D,KAAKC,WAAL,EAA5D,CADF,EAEG,KAAKC,UAAL,EAFH,CADF,CADF,CADF,CAFO,CAYL;AACH;;;iCACY;AACX,UAAG,KAAKR,KAAL,CAAWE,IAAX,CAAgBO,MAAhB,KAA2B,CAA9B,EAAiC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACjC,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKT,KAAL,CAAWE,IAAX,CAAgBQ,GAAhB,CAAoB,UAAAC,IAAI;AAAA,eAAI;AAAI,UAAA,GAAG,EAAEA,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAgBA,IAAhB,CAAJ;AAAA,OAAxB,CADH,CADF;AAKD;;;kCACa;AAAA,UACJV,KADI,GACM,KAAKD,KADX,CACJC,KADI,EACkB;;AAC9B,aAAOA,KAAK,KAAK,CAAV,GAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd,GAAkCA,KAAzC;AACD;;;iCACY;AACX,UAAIW,OAAO,GAAG,QAAd;AACAA,MAAAA,OAAO,IAAK,KAAKZ,KAAL,CAAWC,KAAZ,KAAuB,CAAvB,GAA2B,SAA3B,GAAuC,SAAlD;AACA,aAAOW,OAAP;AACD;;;;EAvCmBd,S;;AA0CtB,eAAeC,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n  state = {\n    count: 1,\n    list: []\n  };\n  styles = {\n    fontSize: 22,\n    fontWeight: 900\n  };//Inline styles are objects\n  render() {\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-6\">\n            <h1 style={ this.styles } className={ this.getClasses() }>{ this.formatCount() }</h1>\n            {this.renderList()}\n          </div>\n        </div>\n      </div>\n\n    );//always use a key with map\n  }\n  renderList() {\n    if(this.state.list.length === 0) return <p>Empty List</p>\n    return (\n      <ul>\n        {this.state.list.map(item => <li key={item}>{item}</li>)}\n      </ul>\n    )\n  }\n  formatCount() {\n    const { count } = this.state; //object destruct\n    return count === 0 ? <span>Zero</span> : count;\n  }\n  getClasses() {\n    let classes = \"c1 c2 \";\n    classes += (this.state.count) === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}